# crypto.cfg 
# Copyright (c) 2013 Ross Biro
# This configuration file describes the crypto systems available to mover.
# 
#   This program is free software: you can redistribute it and/or
#   modify it under the terms of the GNU General Public License as
#   published by the Free Software Foundation, version 3 of the
#   License.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#   General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see
#   <http://www.gnu.org/licenses/>.
#
#


gpg: {
     key-desc: { key-name: { type:string, default:<+Key%lu>}, 
     	       key-file: {type:file, default:gpg-keyring},
	       key-bits: {type:number, default:2048},
	       },
     key-format: pem,
     encrypt: gpg --encrypt --batch --recipient <$key-name> --keyring <$key-file> --no-default-keyring,
     decrypt: gpg --decrypt --batch --keyring <$key-file> --no-default-keyring,
     genkey: echo Key-Type: default Key-Length:<$key-bits> Name-Real:<$key-name> <?temporary:--no-protection> | gpg --gen-key --batch --keyring <$key-file> --no-default-keyring,
     export-public: gpg --batch --no-default-keyring --keyring <$key-file> --export -a <$key-name>,
     import-public: gpg --batch --no-default-keyring --keyring <$key-file> --import
     delete-public: gpg --batch --no-default-keyring --keyring <$key-file> --delete-key <$key-name>
     delete-private: gpg --batch --no-default-keyring --keyring <$key-file> --delete-secret-key <$key-name>
     
}

openssl: {
     key-desc: { key-file: {type:file, default:<+openssl-key-%lu>.pem} },
     key-format: pem,
     encrypt: openssl pkeyutl -pubin -inkey <$key-file> -encrypt -rsa_padding_mode:oaep,
     decrypt: openssl pkeyutl -inkey <$key-file> -decrypt -rsa_padding_mode:oaep,
     genkey: openssl genkey -des3 -out <$key-file> <$key-bits>
     export-public: openssl rsa -in <$key-file> -pubout
}

otp: {
     key-desc: { key-file: {type:file, default:<+otp-%lu.dat>},
     	       	 key-bits:{type:number, default:16384}},
     use-once: true,
     key-format: raw,
     encrypt: xor - <$key-file>
     decrypt: xor - <$key-file>
     genkey: otp --generate=<$key-bits>
}
